@model test.Models.LoginViewModel

<div class="container text-center">
    <h1>Welcome to the Contract Monthly Claim System (CMCS)</h1>
    <p>
        The Contract Monthly Claim System (CMCS) is designed to streamline the process of submitting and managing claims for academic staff. With a user-friendly interface, CMCS allows lecturers to easily submit their claims, while Programme Coordinators and Academic Managers can efficiently review and approve them. Our goal is to enhance administrative efficiency and ensure a transparent claim processing experience.
    </p>

    <h2>Login as:</h2>

    <!-- Buttons for selecting the role -->
    <div class="role-selection">
        <button onclick="showLoginForm('Lecturer')" class="btn btn-primary">Lecturer</button>
        <button onclick="showLoginForm('Academic Manager')" class="btn btn-primary">Academic Manager</button>
        <button onclick="showLoginForm('Programme Coordinator')" class="btn btn-primary">Programme Coordinator</button>
    </div>

    <hr />

    <!-- Hidden login form that shows after button click -->
    <div id="loginForm" style="display:none;">
        <h3 id="roleHeading"></h3>

        <form asp-action="Login" method="post">
            <div class="form-group">
                <label for="Username">Username</label>
                <input type="text" id="Username" name="Username" class="form-control" required />
            </div>
            <div class="form-group">
                <label for="Password">Password</label>
                <input type="password" id="Password" name="Password" class="form-control" required />
            </div>

            <!-- Hidden input to store the selected role -->
            <input type="hidden" id="Role" name="Role" />

            <button type="submit" class="btn btn-success">Login</button>
        </form>
    </div>
</div>
@if (!ViewData.ModelState.IsValid && ViewData.ModelState.ContainsKey(""))
{
    var errorMessage = ViewData.ModelState[""].Errors.First().ErrorMessage;
    <div class="alert alert-danger mt-3">
        @errorMessage
    </div>
}
<!-- JavaScript to display the login form when a role is selected -->
<script type="text/javascript">
    function showLoginForm(role) {
        document.getElementById("roleHeading").innerText = "Login as " + role;
        document.getElementById("loginForm").style.display = "block";

        // Set the hidden role input value
        document.getElementById("Role").value = role;
    }
</script>

<style>
    body {
        background-color: #f8f9fa; /* Light background color */
        color: #343a40; /* Dark text color */
    }

    .container {
        max-width: 600px; /* Center the container */
        margin: auto; /* Center alignment */
        padding: 20px; /* Padding around the container */
        border: 1px solid #dee2e6; /* Border for the container */
        border-radius: 8px; /* Rounded corners */
        background-color: #ffffff; /* White background */
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); /* Subtle shadow for depth */
    }

    h1, h2 {
        margin-bottom: 20px; /* Space below headings */
    }

    .role-selection {
        display: flex; /* Use flexbox for horizontal alignment */
        justify-content: space-around; /* Even spacing between buttons */
        margin-bottom: 20px; /* Space below the buttons */
    }

    .btn {
        flex: 1; /* Equal size buttons */
        margin: 0 10px; /* Margin between buttons */
    }

    hr {
        border: 1px solid #dee2e6; /* Gray color for the separator */
    }
</style>

